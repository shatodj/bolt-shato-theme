{# Theme section block #}
{# Required: content, bgColor #}
{# Optional: isParalax, image, section  #}
{% block section %}

	{% set sectionExtraClass = config.get("theme/layout/class/section")|default %}

	{# Section images initialization #}
	{% if image|default is not empty %}
		{% import "twig/partials/_macros.twig" as m %}
		{% set bgImages = m.progressive_thumbimage(image) %}
	{% endif %}

	{% if content is not defined %}
		{% set content %}
			{%- with { 
				message: __("The content property of the section block was not set.")
			} -%}
				{{ block("error_block", "blocks.twig") }}
			{%- endwith -%}
		{% endset %}
	{% endif %}

	{% set contentWithAnchor %}
		{% if section.slug is defined %}
			<div class="shpr-section-anchor" id="{{ section.slug }}"></div>
		{% endif %}
		{{ content }}
	{% endset %}

	{# Wrap section in lazy-background element #}
	{%- with { 
		bgImages: bgImages|default, 
		isParalax: isParalax|default(false), 
		content: contentWithAnchor,
		htmlTag: "section", 
		class: "section is-section-" ~ bgColor ~ " " ~ sectionExtraClass
	} -%}
		{{ block("lazy_background_wrapper") }}
	{%- endwith -%}

{% endblock %}


{# Render Hero Block #}
{# Required: content #}
{# optional: image #}
{% block hero %}

	{# Section images initialization #}
	{% if image|default is not empty %}
		{% import "twig/partials/_macros.twig" as m %}
		{% set bgImages = m.progressive_thumbimage(image) %}
	{% endif %}
	
	{% if content is not defined %}
		{% set content %}
			{%- with { 
				message: __("The content property of the section block was not set.")
			} -%}
				{{ block("error_block", "blocks.twig") }}
			{%- endwith -%}
		{% endset %}
	{% endif %}

	{% set heroBody %}
		<div class="hero-body">
			{% block hero_body %}
				{{ content }}
			{% endblock %}
		</div>
	{% endset %}

	{% import "twig/partials/_macros.twig" as m %}
	
	{# Wrap section in lazy-background element #}
	{%- with { 
		bgImages: bgImages|default, 
		isParalax: false, 
		content: heroBody,
		htmlTag: "section", 
		class: "hero " ~ class|default
	} -%}
		{{ block("lazy_background_wrapper") }}
	{%- endwith -%}

{% endblock %}

{# Hero component content #}
{# Showing content fo Hero component block #}
{% block hero_content %}
	<h1 class="title is-1 is-3-mobile is-spaced">{{ section|title|default }}</h1>
	
	{% if includeInfo|default(false) %}
		{% include "twig/partials/_record_info.twig" %}
	{% endif %}

	{% set teaser = section.introduction|default(section.teaser|default) %}
	{% if teaser is not empty %}
		<div class="subtitle content">{{ teaser }}</div>
	{% endif %}

	{% if includeMeta|default(false) %}
		{% include 'twig/partials/_record_meta.twig' with {'extended': true} %}
	{% endif %}

	{% if includeTaxonomy|default(false) %}
		{% include 'twig/partials/_record_taxonomy.twig' with { 'record': record } %}
	{% endif %}
{% endblock %}

{# Section content block #}
{# Showing content of 'block' content type #}
{% block section_content %}
	<h2 class="title is-3 is-size-4-mobile is-spaced">{{ section|title|default }}</h2>

	{%- if section.content is not empty %}
		<div class="content">
			{{ section.content }}
		</div>
	{% endif -%}

	{# Embedded field #}
	{%- if section.embedded is not empty %}
		{{ section.embedded.html|raw }}
	{% endif %}
	{# Textarea field considered as embedded with raw not sanitized data #}
	{%- if section.embedded_raw is not empty %}
		{{ section.embedded_raw|raw }}
	{% endif %}

	{# Showing the listing of contents  #}
	{# If 'contenttemplate' is not present then will be generated by the type of data' #}
	{% with { 'section': section }%}
	{{ block("section_content_list_blocks") }}
	{% endwith %}

	{# showing the gallery if added to the block #}
	{% if section.gallery|length %}
		<section>
			{% with { 'gallery': section.gallery } %}
			{{ block("section_content_gallery") }}
			{% endwith %}
		</section>
	{% endif %}

	{# Showing links / actions for the Block #}
	{% if section.links|length > 0 or section.editlink() %}
		<nav class="shpr-actions columns">
			<div class="column has-text-centered">
				{% for link in section.links %}	
					<a href="{{ link.contentlink }}" class="button">{{ link.title|markdown|excerpt(45) }}</a>
				{% endfor %}
				{% if section|edit_link %}
					{% with { 'record': section } %}
					{{ block('edit_button', 'blocks.twig') }}
					{% endwith %}
				{% endif %}
			</div>
		</nav>
	{% endif %}
{% endblock %}

{% block section_content_gallery %}

	{% import "twig/partials/_macros.twig" as m %}

	<div class="shpr-gallery">
		<div class="use-magnific imagelist columns is-mobile is-multiline">
			{% for image in gallery|default([]) %}
			<div class="column is-6-mobile is-3-desktop">
				<div class="card">
					<div class="card-image">
						<figure class="image">
							{{ m.lazyImagePopup(image, alias|default("gallery"), aliasBig|default("gallery-big"), "is-2x3", true) }}
						</figure>
					</div>
					<div class="card-content is-overlay is-clipped without-pointer-events">
						<span class="tag is-info">
							{{ image.alt|default }}
						</span> 
					</div>
				</div>
			</div>
			{% endfor %}
		</div>
	</div>
{% endblock %}

{# Section content list blocks #}
{% block section_content_list_blocks %}
	{% set subBlockContent = [] %}

	{%- if section.contentlink|default is not empty and not (section.contentlink starts with 'http') %}
		{% setcontent subBlockContent = section.contentlink where {status: 'published'} orderby 'publishedAt' limit section.contentlimit|default(0) %}
	{% endif %}

	{% if section.contentselect|default is not empty %}
		{% set subBlockContent = subBlockContent|merge(section.contentselect|selected) %}
	{% endif %}

	{% if subBlockContent is not empty %}
	
		{# Generate template name in case is contenttemplate is not defined #}
		{% if contenttemplate|default is not empty %}
			{% set template = contenttemplate %}
		{% elseif section.contenttemplate|default is not empty %}
			{% set template = section.contenttemplate %}
		{% else %}
			{% set templateName = subBlockContent is iterable ? 'listing' : 'content' %}
			{% set template = 'twig/contentblock/' ~ templateName ~ '.twig' %}
		{% endif %}
		
		{% include template with { content: subBlockContent } %}		
	{% endif -%}
{% endblock %}


{# Lazy Background helper block #}
{# Required: 
	content: HTML 
#}
{# Optional: 
	bgImages: array 
	isParalax: boolean
	htmlTag: enum(section|article|div...) 
	class: string
#}
{% block lazy_background_wrapper %}
	<div class="shpr-lazy-background" data-src="{{ bgImages|default }}">
				
		{# Adding empty elements to handle dynamic background styling - see lazy-section-backgorund.js #}
		{% if bgImages|default is not empty %}
			{% if isParalax|default == true %}
				<div class="shpr-background shpr-background-paralax"></div>
			{% endif %}	
			<div class="shpr-background shpr-background-overlay"></div>
		{% endif %}
		
		{# Actual section with content #}
		<{{htmlTag|default("div")}} class="shpr-section with-transparent-overlay {{class|default}}">
			{{ content }}
		</{{htmlTag|default("div")}}>
	</div>
{% endblock %}
